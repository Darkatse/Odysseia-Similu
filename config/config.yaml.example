# Odysseia-Similu 音乐机器人配置

# Discord 机器人配置
discord:
  token: "YOUR_DISCORD_BOT_TOKEN_HERE"  # 在此处填入您的 Discord 机器人令牌
  command_prefix: "!"  # 命令前缀，用户需要在命令前输入此符号

# 机器人管理配置
bot:
  # 机器人所有者的 Discord 用户 ID，用于管理员权限控制
  # 获取方法：在 Discord 中右键点击您的用户名，选择"复制 ID"
  # 注意：需要在 Discord 设置中启用"开发者模式"才能看到此选项
  owner_id: 123456789012345678  
  # 机器人管理员的 Discord 用户 ID（可选，通常与 owner_id 相同）
  admin_id: 123456789012345678  

# 下载配置
download:
  temp_dir: "./temp"  # 临时文件存储目录

# 音乐播放配置
music:
  enabled: true  # 设置为 false 可禁用音乐功能
  max_queue_size: 100  # 每个服务器队列中的最大歌曲数量
  max_song_duration: 600  # 最大歌曲时长（秒），此处为10分钟
  auto_disconnect_timeout: 300  # 无活动后自动断开连接的时间（秒），此处为5分钟
  volume: 0.5  # 默认播放音量（0.0-1.0）
  ffmpeg_options:
    before: "-reconnect 1 -reconnect_streamed 1 -reconnect_delay_max 5"  # 输入前的 FFmpeg 选项
    options: "-vn"  # FFmpeg 选项（无视频）

  # 跳过歌曲投票系统配置
  skip_voting:
    enabled: true  # 是否启用民主投票跳过系统（设置为 false 则恢复直接跳过）
    threshold: 5  # 投票阈值 - 支持以下格式：
                  # - 固定数字（如 5）：需要固定数量的投票
                  # - 百分比字符串（如 "50%"）：需要语音频道内用户的百分比投票
                  # - 推荐设置：
                  #   * 小型服务器（< 20人）：3 或 "40%"
                  #   * 中型服务器（20-100人）：5 或 "50%"（默认）
                  #   * 大型服务器（> 100人）：7 或 "60%"
    timeout: 60  # 投票超时时间（秒），超时后投票自动失败
    min_voters: 2  # 最小投票人数要求（防止单人频道滥用）
                   # 当语音频道人数少于此值时，允许直接跳过

# 播放事件配置
playback:
  notify_absent_users: true  # 是否向缺席用户发送"轮到你的歌了"提醒通知
                            # 设置为 false 可禁用对不在语音频道的用户的提前通知
                            # 默认: true（启用通知）

  # YouTube PoToken 配置（绕过机器人检测）
  youtube:
    # 自动机器人检测处理
    auto_fallback_on_bot_detection: true  # 当检测到机器人时自动尝试备用方法

    # PoToken 设置
    potoken:
      enabled: false  # 设置为 true 启用 PoToken 使用
      auto_generate: true  # 使用 nodejs 自动生成 PoToken（需要安装 nodejs）
      client: "WEB"  # PoToken 客户端类型："WEB"、"WEB_EMBED"、"ANDROID"、"MWEB"

      # 手动 PoToken 配置（当 auto_generate 为 false 时使用）
      manual:
        visitor_data: ""  # 手动 visitorData（留空则提示输入）
        po_token: ""  # 手动 PoToken（留空则提示输入）

      # PoToken 缓存
      cache_enabled: true  # 缓存 PoToken 和 visitorData 以供重复使用

    # 备用配置
    fallback:
      # 机器人检测发生时的备用链：
      # 1. 切换到 WEB 客户端并自动生成 PoToken（如果有 nodejs）
      # 2. 使用手动 PoToken（如果已配置）
      # 3. 提示手动输入 PoToken
      use_web_client: true  # 尝试 WEB 客户端作为第一备用方案
      prompt_for_manual_potoken: false  # 提示手动 PoToken 作为最后手段（不推荐用于机器人）

# 重复检测和队列公平性配置
duplicate_detection:
  # 队列长度阈值 - 用于动态调整限制严格程度
  # 当队列总长度（包括当前播放歌曲）小于此值时，临时禁用所有限制：
  # - 允许用户添加重复歌曲
  # - 允许用户添加多首不同歌曲
  # - 允许用户在自己歌曲播放期间添加新歌曲
  #
  # 当队列长度达到或超过此值时，恢复正常的公平性限制：
  # - 每用户同时只能有一首歌曲在队列中
  # - 禁止添加重复歌曲
  # - 播放期间不能添加新歌曲
  #
  # 使用场景：
  # - 低峰时段（凌晨、深夜）：用户可以自由添加多首歌曲
  # - 高峰时段（晚上、周末）：自动启用公平性限制
  #
  # 推荐配置：
  # - 小型服务器（< 50人）：7-10
  # - 中型服务器（50-200人）：5-7
  # - 大型服务器（200+人）：3-5
  # - 高活跃服务器：2-4
  #
  # 默认值: 5
  # 最小值: 1
  queue_length_threshold: 5

# 网易云音乐反向代理配置
netease_proxy:
  # 是否启用反向代理功能
  # 设置为 true 时，所有网易云音乐请求将通过配置的代理域名进行
  # 用于解决海外部署时的版权限制问题
  enabled: false  # 默认禁用，需要时手动启用

  # 反向代理服务器域名
  # 将替换所有网易云音乐相关域名（music.163.com, music.126.net等）
  # 示例：如果设置为 "proxy.example.com"，则：
  # - https://music.163.com/api/search/get -> http://proxy.example.com/api/search/get
  # - https://music.163.com/song/media/outer/url?id=123 -> http://proxy.example.com/song/media/outer/url?id=123
  # - https://api.paugram.com/netease/?id=123 -> http://proxy.example.com/netease/?id=123
  proxy_domain: ""  # 留空则使用原始域名

  # 代理协议设置
  # 某些反向代理服务器可能只支持HTTP而不支持HTTPS
  use_https: false  # 设置为 false 使用 HTTP，true 使用 HTTPS

  # 域名映射配置
  # 定义具体的域名替换规则，支持更精细的控制
  domain_mapping:
    # 网易云音乐主域名
    "music.163.com": ""  # 留空则使用 proxy_domain
    "music.126.net": ""  # 留空则使用 proxy_domain
    "y.music.163.com": ""  # 留空则使用 proxy_domain

    # 第三方API代理域名
    "api.paugram.com": ""  # 留空则使用 proxy_domain

  # 请求头配置
  # 某些代理服务器可能需要特定的请求头
  headers:
    # 是否保持原始Referer头
    preserve_referer: true
    # 是否保持原始Host头
    preserve_host: false  # 通常设置为false以使用代理域名
    # 自定义请求头（可选）
    custom_headers: {}
      # 示例：
      # "X-Forwarded-For": "original-client-ip"
      # "X-Real-IP": "original-client-ip"

  # 调试和日志配置
  debug:
    # 是否记录域名替换的详细日志
    log_domain_replacement: true
    # 是否记录代理请求的详细信息
    log_proxy_requests: false  # 可能包含敏感信息，生产环境建议关闭

# 网易云音乐会员认证配置
netease_member:
  # 是否启用会员认证功能
  # 启用后可以下载VIP专属歌曲和高品质音频
  enabled: false  # 默认禁用，需要时手动启用

  # 会员账号Cookie配置
  # 从浏览器登录网易云音乐后获取的Cookie信息
  cookies:
    # 主要认证Cookie - MUSIC_U
    # 这是最重要的认证Cookie，包含用户登录状态
    # 获取方法：
    # 1. 在浏览器中登录 music.163.com
    # 2. 打开开发者工具 -> Application -> Cookies -> music.163.com
    # 3. 复制 MUSIC_U 的值
    MUSIC_U: ""  # 必填，会员认证的核心Cookie

    # 可选的其他Cookie（通常自动获取，无需手动配置）
    __csrf: ""      # CSRF令牌，通常自动从MUSIC_U中提取
    __remember_me: "true"  # 记住登录状态

    # 其他可能需要的Cookie（高级用户配置）
    # 一般情况下只需要配置MUSIC_U即可
    additional_cookies: {}
      # 示例：
      # "NMTID": "xxx"
      # "WEVNSM": "xxx"

  # 音频质量配置
  audio_quality:
    # 默认音频质量等级
    # standard: 标准品质 (128kbps)
    # higher: 较高品质 (192kbps)
    # exhigh: 极高品质 (320kbps)
    # lossless: 无损品质 (FLAC)
    # hires: 高解析度音频 (Hi-Res)
    default_level: "exhigh"  # 推荐设置为exhigh获得较好的音质

    # 音频编码格式偏好
    # mp3: MP3格式，兼容性最好
    # aac: AAC格式，压缩效率更高
    # flac: FLAC格式，无损音质
    preferred_format: "aac"

    # 是否自动降级音质
    # 当请求的音质不可用时，是否自动使用较低音质
    auto_fallback: true

  # 认证和安全配置
  authentication:
    # Cookie有效性检查间隔（秒）
    # 定期检查Cookie是否仍然有效，避免使用过期Cookie
    validity_check_interval: 3600  # 1小时检查一次

    # 是否在Cookie失效时自动禁用会员功能
    # true: 自动回退到免费模式
    # false: 继续尝试使用会员功能（可能导致错误）
    auto_disable_on_invalid: true

    # 最大重试次数
    # 当会员API调用失败时的重试次数
    max_retry_attempts: 3

    # 重试间隔（秒）
    retry_interval: 2

  # 缓存配置
  cache:
    # 是否启用会员信息缓存
    # 缓存用户VIP状态、音质权限等信息，减少API调用
    enabled: true

    # 缓存过期时间（秒）
    # 会员信息缓存的有效期
    expiry_time: 1800  # 30分钟

    # 是否缓存音频URL
    # 缓存获取到的音频下载链接，避免重复请求
    cache_audio_urls: true

    # 音频URL缓存过期时间（秒）
    audio_url_expiry: 300  # 5分钟（网易云音乐的URL通常较短时效）

  # 调试和日志配置
  debug:
    # 是否记录会员认证相关日志
    log_authentication: true

    # 是否记录音频质量选择过程
    log_quality_selection: true

    # 是否记录Cookie使用情况（注意：可能包含敏感信息）
    log_cookie_usage: false  # 生产环境建议关闭

    # 是否在日志中隐藏敏感信息
    mask_sensitive_data: true  # 强烈建议保持开启

  # 兼容性配置
  compatibility:
    # 是否与免费用户功能兼容
    # 当会员功能不可用时，是否回退到免费用户模式
    fallback_to_free: true

    # 是否保持现有命令语法
    # 确保启用会员功能后，Discord命令语法保持不变
    preserve_command_syntax: true

    # 错误处理策略
    # silent: 静默处理错误，回退到免费模式
    # notify: 通知用户会员功能不可用
    # strict: 严格模式，会员功能失败时报错
    error_handling: "notify"

# 随机抽卡功能配置
card_draw:
  enabled: true  # 是否启用随机抽卡功能

  # 抽卡行为配置
  max_redraws: 3  # 每次抽卡的最大重抽次数
  timeout_seconds: 60  # 用户交互超时时间（秒）

  # 默认抽卡来源设置
  default_source: "global"  # 默认抽卡来源：
                            # - "global": 全局池（所有用户的歌曲历史）
                            # - "personal": 个人池（用户自己的歌曲历史）

  # 权重算法配置
  weight_algorithm:
    recent_bonus: 1.2  # 最近歌曲的权重加成倍数
    frequency_penalty: 0.8  # 高频歌曲的权重惩罚倍数
    user_diversity_bonus: 1.1  # 用户多样性加成倍数

  # 数据库配置
  database:
    auto_record: true  # 是否自动记录队列歌曲到历史数据库
    cleanup_days: 365  # 历史记录保留天数（0表示永久保留）
    max_records_per_user: 1000  # 每个用户最大历史记录数（0表示无限制）

# 日志配置
logging:
  level: "INFO"  # 日志级别选项：DEBUG、INFO、WARNING、ERROR、CRITICAL
  file: "./logs/Odysseia-similu.log"  # 日志文件路径
  max_size: 10485760  # 最大日志文件大小（字节），此处为 10 MB
  backup_count: 5  # 保留的备份日志文件数量
